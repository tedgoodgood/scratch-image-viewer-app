name: Build Android APK

on:
  push:
    branches:
      - main
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew assembleDebug

      - name: Locate debug APK
        id: locate_apk
        run: |
          apk_path=$(find "$PWD/app/build/outputs/apk/debug" -name "*.apk" -type f | head -n 1)
          if [ -z "$apk_path" ]; then
            echo "No APK files were found" >&2
            exit 1
          fi
          echo "apk_path=$apk_path" >> "$GITHUB_OUTPUT"

      - name: Upload debug APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: composeapp-debug-apk
          path: ${{ steps.locate_apk.outputs.apk_path }}
          retention-days: 30

      - name: Publish debug APK as GitHub release
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: build-${{ github.run_id }}
          name: "Automated build #${{ github.run_number }}"
          body: |
            Automated debug build generated from commit ${{ github.sha }}.

            This APK is debug-signed and intended for testing only.
          prerelease: true
          files: ${{ steps.locate_apk.outputs.apk_path }}
